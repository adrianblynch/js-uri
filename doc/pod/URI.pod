=encoding utf8

=head1 NAME

URI - An object for Uniform Resource Identifiers

=head1 SYNOPSIS

    var some_uri = new URI("http://www.example.com/foo/bar");

    alert(some_uri.getAuthority()); // → www.example.com
    alert(some_uri);                // → http://www.example.com/foo/bar

    var blah      = new URI("blah");
    var blah_full = blah.resolve(some_uri);
    alert(blah_full);           // → http://www.example.com/foo/blah

=head1 DESCRIPTION

This object assists in parsing and manipulating URI (Uniform Resource
Identifier) objects.  This also covers URLs (Uniform Resource Locators).

=head1 INTERFACE

=head2 Constructor

=over 4

=item new URI ( String )

Creates a new URI object by parsing I<String>. That could be either an
absolute URL like C<http://www.example.com/foo> or an relative URI like
C</foo?page=2>.

=back

=head2 Public instance methods

=over 4

=item parseQuery ( )

Returns a new L</URIQuery> object representing the query string as a series of
parameters.

=item resolve ( base )

Resolve this URI relative to I<base>. Returns a new URI object. Usually,
I<base> will be a fully-qualified URI containing a scheme. e.g.

  var rel  = new URI("blah.html");
  var base = new URI("http://example.com/hello/world.html");
  var abs  = rel.resolve(base);
  alert(abs); // → http://example.com/hello/blah.html

=item toString ( )

Returns a string representation of the URI.

=back

=head2 Public Accessors

=over 4

=item getScheme ( )

=item setScheme ( newScheme )

e.g. “http”

=item getAuthority ( )

=item setAuthority ( newAuthority )

e.g. “www.example.com:82”

=item getPath ( )

=item setPath ( newPath )

e.g. “/foo/bar”

=item getQuery ( )

=item setQuery ( newQuery )

e.g. “page=2&sort=alpha”

=item getFragment ( )

=item setFragment ( newFragment )

e.g. “section1”

=back

=head2 URIQuery

This is an internal object used to represent an URI query string as a hash
(dictionary of parameters).

=over 4

=item addStringParams ( String )

Parse I<String> as a query string (e.g. C<foo=bar&bar=baz>) and append all the
values into the current URIQuery object.

=item getParam ( name )

Returns the value of the first parameter with I<name>.

=item params

This property is an object containing all values of a parameter. If you parse
the query string C<foo=bar&foo=baz>, then I<params> will look like this:

  {
      foo: ['bar', 'baz']
  }

  // e.g.  Pull out the second foo parameter.
  q.params.foo[1];  // → 'baz'

=item toString()

Turn this URIQuery object back into a string.

=back

=head1 SEE ALSO

The js-uri home page: L<http://code.google.com/p/js-uri/>

The Perl implementation: L<http://search.cpan.org/dist/URI/URI.pm>

RFC3986 (Uniform Resource Identifier (URI): Generic Syntax):
L<http://tools.ietf.org/html/rfc3986>

=head1 AUTHOR

Dominic Mitchell E<lt>dom [at] happygiraffe.netE<gt>

=head1 COPYRIGHT

Copyright © 2007 Dominic Mitchell

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

=over 4

=item *

Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

=item *

Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

=item *

Neither the name of the Dominic Mitchell nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

=back

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

=cut

# @(#) $Id$